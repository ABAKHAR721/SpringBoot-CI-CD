pipeline {
    agent any
    environment {
        SONAR_TOKEN = credentials('SonarQubeToken') // Use your Jenkins credential ID
    }
    stages {
        stage('Tool Install') {
            steps {
                echo 'Installing required tools...'
            }
        }
        stage('Checkout') {
            steps {
                  checkout scm
                // git url: 'https://github.com/ABAKHAR721/test3.git', branch: 'main'
            }
        }
        stage('Build and SonarQube Analysis') {
            steps {
                withSonarQubeEnv('SonarQubeServer') {
                    bat 'mvn clean verify sonar:sonar -Dsonar.login=%SONAR_TOKEN%'
                }
            }
        }
        stage('Quality Gate') {
            steps {
                timeout(time: 10, unit: 'MINUTES') { // Extended timeout
                    script {
                        def qualityGate = waitForQualityGate()
                        if (qualityGate.status != 'OK') {
                            error "Pipeline aborted due to quality gate failure: ${qualityGate.status}"
                        }
                    }
                }
            }
        }
    }
    post {
        success {
            echo 'Pipeline completed successfully!'
        }
        failure {
            echo 'Pipeline failed!'
        }
        always {
            cleanWs()
        }
    }
}
